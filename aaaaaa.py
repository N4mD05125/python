from z3 import *


s=Int('s')
v6=Int('v6')
v7=Int('v7')
v8=Int('v8')
v9=Int('v9')
v10=Int('v10')
v11=Int('v11')
v12=Int('v12')
v13=Int('v13')
v14=Int('v14')
v15=Int('v15')
v16=Int('v16')
v17=Int('v17')
v18=Int('v18')
v19=Int('v19')
v20=Int('v20')
v21=Int('v21')
v22=Int('v22')
v23=Int('v23')
v24=Int('v24')
v25=Int('v25')
v26=Int('v26')
v27=Int('v27')
v28=Int('v28')
v29=Int('v29')
v30=Int('v30')
v31=Int('v31')
v32=Int('v32')
v33=Int('v33')
v34=Int('v34')
v35=Int('v35')
v36=Int('v36')
v37=Int('v37')
v38=Int('v38')
v39=Int('v39')
v40=Int('v40')
v41=Int('v41')
v42=Int('v42')


solver = Solver()
solver.add(v22 + v23 + s + v15 - v39  == 208)
solver.add(v12 + v36 + v26 - v27 + v32 == 197 )
solver.add(v10 + v16 - v28 - v14 + v6 == 150)
solver.add(v28 + v22 + v24 - v17 - v9 ==-61 )
solver.add(v27 + v13 + v33 - v28 - v10  == 139 )
solver.add( v24 + v39 + v17 - v33 + v42 == 330)
solver.add( v34 + v15 + v26 + v27 - v12 == 153)
solver.add( v21 + v35 + v31 - v8 - v18 == 91  )
solver.add( v37 + v17 + v25 + v19 + v15 == 408 )
solver.add( v30 + v20 - v33 - v17 - v21 == -46 )
solver.add( v13 + v6 - v11 - v8 + v32 == 154 )
solver.add( v32 + v8 - v40 - v6 - v34 == -18  )
solver.add( v31 + v37 + v7 - v13 - v35 == 50 )
solver.add( v34 + v31 + v17 - v13 - v36 == 58 )
solver.add( v24 + v18 + v20 - v37 + v32 == 203 )
solver.add( v10 + v25 - v42 - v9 + v12 == -44 )
solver.add( v24 + v37 + v39 - v19 + v6 == 259 )
solver.add( v27 + v42 + v39 - v40 - v13 == 163 )
solver.add( v37 + v22 + v19 + v30 + v40 == 414 )
solver.add( v15 + v11 + v26 + v10 + v9 == 327 )
solver.add( v34 + v30 + v41 - v20 - v27 == 12 )
solver.add( v16 + v29 - v40 - v22 - v13 == -51 )
solver.add( v13 + s - v40 - v41 - v24 == 38 )
solver.add( v36 + v32 + v9 + v39 - v7 == 268 )
solver.add( v30 + v14 - v23 - v39 + v29 == 22 )
solver.add( v8 + v23 + v39 - v25 - v7 == 150 )
solver.add( v14 + v24 - v27 - v40 + v22 == 11 )
solver.add( v6 + v9 - v34 - v16 + v29 == 132 )
solver.add( s + v15 - v17 - v10 - v34 == -54 )
solver.add( v20 + v18 - v25 - v40 - v13 == -55 )
solver.add( v39 + v8 - v42 - v38 + v34 == 72  )
solver.add( v20 + v41 + v17 - v18 - v27 == 106 )
solver.add(  v17 + v39 - v36 - v34 - v26 == 48 )
solver.add( v12 + v33 - v13 - v11 + v9 == 123 )



solver.add(Or(And(s >= 0x30, s <= 0x39), And(s >= 0x61, s<= 0x7d)))
solver.add(Or(And(v6  >= 0x30, v6  <= 0x39), And(v6  >= 0x61, v6 <= 0x7d)))
solver.add(Or(And(v7  >= 0x30, v7  <= 0x39), And(v7  >= 0x61, v7 <= 0x7d)))
solver.add(Or(And(v8  >= 0x30, v8  <= 0x39), And(v8  >= 0x61, v8 <= 0x7d)))
solver.add(Or(And(v9  >= 0x30, v9  <= 0x39), And(v9  >= 0x61, v9 <= 0x7d)))
solver.add(Or(And(v10  >= 0x30, v10  <= 0x39), And(v10  >= 0x61, v10 <= 0x7d)))
solver.add(Or(And(v11  >= 0x30, v11  <= 0x39), And(v11  >= 0x61, v11 <= 0x7d)))
solver.add(Or(And(v12  >= 0x30, v12  <= 0x39), And(v12  >= 0x61, v12 <= 0x7d)))
solver.add(Or(And(v13  >= 0x30, v13  <= 0x39), And(v13  >= 0x61, v13 <= 0x7d)))
solver.add(Or(And(v14  >= 0x30, v14  <= 0x39), And(v14  >= 0x61, v14 <= 0x7d)))
solver.add(Or(And(v15  >= 0x30, v15  <= 0x39), And(v15  >= 0x61, v15 <= 0x7d)))
solver.add(Or(And(v16  >= 0x30, v16  <= 0x39), And(v16  >= 0x61, v16 <= 0x7d)))
solver.add(Or(And(v17  >= 0x30, v17  <= 0x39), And(v17  >= 0x61, v17 <= 0x7d)))
solver.add(Or(And(v18  >= 0x30, v18  <= 0x39), And(v18  >= 0x61, v18 <= 0x7d)))
solver.add(Or(And(v19  >= 0x30, v19  <= 0x39), And(v19  >= 0x61, v19 <= 0x7d)))
solver.add(Or(And(v20  >= 0x30, v20  <= 0x39), And(v20  >= 0x61, v20 <= 0x7d)))
solver.add(Or(And(v21  >= 0x30, v21  <= 0x39), And(v21  >= 0x61, v21 <= 0x7d)))
solver.add(Or(And(v22  >= 0x30, v22  <= 0x39), And(v22  >= 0x61, v22 <= 0x7d)))
solver.add(Or(And(v23  >= 0x30, v23  <= 0x39), And(v23  >= 0x61, v23 <= 0x7d)))
solver.add(Or(And(v24  >= 0x30, v24  <= 0x39), And(v24  >= 0x61, v24 <= 0x7d)))
solver.add(Or(And(v25  >= 0x30, v25  <= 0x39), And(v25  >= 0x61, v25 <= 0x7d)))
solver.add(Or(And(v26  >= 0x30, v26  <= 0x39), And(v26  >= 0x61, v26 <= 0x7d)))
solver.add(Or(And(v27  >= 0x30, v27  <= 0x39), And(v27  >= 0x61, v27 <= 0x7d)))
solver.add(Or(And(v28  >= 0x30, v28  <= 0x39), And(v28  >= 0x61, v28 <= 0x7d)))
solver.add(Or(And(v29  >= 0x30, v29  <= 0x39), And(v29  >= 0x61, v29 <= 0x7d)))
solver.add(Or(And(v30  >= 0x30, v30  <= 0x39), And(v30  >= 0x61, v30 <= 0x7d)))
solver.add(Or(And(v31  >= 0x30, v31  <= 0x39), And(v31  >= 0x61, v31 <= 0x7d)))
solver.add(Or(And(v32  >= 0x30, v32  <= 0x39), And(v32  >= 0x61, v32 <= 0x7d)))
solver.add(Or(And(v33  >= 0x30, v33  <= 0x39), And(v33  >= 0x61, v33 <= 0x7d)))
solver.add(Or(And(v34  >= 0x30, v34  <= 0x39), And(v34  >= 0x61, v34 <= 0x7d)))
solver.add(Or(And(v35  >= 0x30, v35  <= 0x39), And(v35  >= 0x61, v35 <= 0x7d)))
solver.add(Or(And(v36  >= 0x30, v36  <= 0x39), And(v36  >= 0x61, v36 <= 0x7d)))
solver.add(Or(And(v37  >= 0x30, v37  <= 0x39), And(v37  >= 0x61, v37 <= 0x7d)))
solver.add(Or(And(v38  >= 0x30, v38  <= 0x39), And(v38  >= 0x61, v38 <= 0x7d)))
solver.add(Or(And(v39  >= 0x30, v39  <= 0x39), And(v39  >= 0x61, v39 <= 0x7d)))
solver.add(Or(And(v40  >= 0x30, v40  <= 0x39), And(v40  >= 0x61, v40 <= 0x7d)))
solver.add(Or(And(v41  >= 0x30, v41  <= 0x39), And(v41  >= 0x61, v41 <= 0x7d)))
solver.add(Or(And(v42  >= 0x30, v42  <= 0x39), And(v42  >= 0x61, v42 <= 0x7d)))

if solver.check() == sat:
    solution = solver.model()
    print(f"{solution[s]}", end = ",")
    print(f"{solution[v6]}", end = ",")
    print(f"{solution[v7]}", end = ",")
    print(f"{solution[v8]}", end = ",")
    print(f"{solution[v9]}", end = ",")
    print(f"{solution[v10]}", end = ",")
    print(f"{solution[v11]}", end = ",")
    print(f"{solution[v12]}", end = ",")
    print(f"{solution[v13]}", end = ",")
    print(f"{solution[v14]}", end = ",")
    print(f"{solution[v15]}", end = ",")
    print(f"{solution[v16]}", end = ",")
    print(f"{solution[v17]}", end = ",")
    print(f"{solution[v18]}", end = ",")
    print(f"{solution[v19]}", end = ",")
    print(f"{solution[v20]}", end = ",")
    print(f"{solution[v21]}", end = ",")
    print(f"{solution[v22]}", end = ",")
    print(f"{solution[v23]}", end = ",")
    print(f"{solution[v24]}", end = ",")
    print(f"{solution[v25]}", end = ",")
    print(f"{solution[v26]}", end = ",")
    print(f"{solution[v27]}", end = ",")
    print(f"{solution[v28]}", end = ",")
    print(f"{solution[v29]}", end = ",")
    print(f"{solution[v30]}", end = ",")
    print(f"{solution[v31]}", end = ",")
    print(f"{solution[v32]}", end = ",")
    print(f"{solution[v33]}", end = ",")
    print(f"{solution[v34]}", end = ",")
    print(f"{solution[v35]}", end = ",")
    print(f"{solution[v36]}", end = ",")
    print(f"{solution[v37]}", end = ",")
    print(f"{solution[v38]}", end = ",")
    print(f"{solution[v39]}", end = ",")
    print(f"{solution[v40]}", end = ",")
    print(f"{solution[v41]}", end = ",")
    print(f"{solution[v42]}", end = ",")
    
    


else:
    print("Hệ phương trình không có nghiệm.")
